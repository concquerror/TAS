Create Database Bookshop

-- 1. Tworzenie table

Create Table Books(
	Id Int Not Null primary key,
	Name Varchar(50) check(Name like '%') Not Null,
	Authors Varchar(30) Not Null,
	Publisher Varchar(15) Not Null,
	PYear Int Not Null,
	BState Varchar(15) check(BState like 'Dostępna' or BState like 'Nie dostępna')
);
Create Table Archive(
	Name Varchar(50) check(Name like '%') Not Null,
	Authors Varchar(30) Not Null,
	Publisher Varchar(15) Not Null,
	PYear Int Not Null,
);
Create Table eBooks(
	Id Int Not Null primary key,
	Name Varchar(50) check(Name like '%') Not Null,
	Authors Varchar(30) Not Null,
	Publisher Varchar(15) Not Null,
	PYear Int Not Null,
	BState Varchar(15) check(BState like 'Dostępna' or BState like 'Niedostępna')
);
Create Table Users(
	Id Int Not Null primary key,
	Name Varchar(50) check(Name like '%') Not Null,
	Sname Varchar(50) check(Sname like '%') Not Null,
	Birth Date Not Null,
	BooksBorrowed Int Default '0',
	EBooksBorrowed Int Default '0', 
);
Create Table BorrowedBooks(
	Id Int Not Null primary key,
	Name Varchar(50) check(Name like '%') Not Null,
	Authors Varchar(30) Not Null,
	Publisher Varchar(15) Not Null,
	PYear Int Not Null,
	BUser Int Not Null,
);


ALTER TABLE Books
ADD CONSTRAINT FK_Books
FOREIGN KEY (Id)
REFERENCES BorrowedBooks(Id);

Create Trigger All1
ON Books 
AFTER INSERT
AS
	insert into Archive
	SELECT Name, Authors, Publisher, PYear
	FROM inserted;
GO

Create Trigger All2
ON EBooks 
AFTER INSERT
AS
	insert into Archive
	SELECT Name, Authors, Publisher, PYear
	FROM inserted;
GO

Create Procedure Add_Book
(
	@Name Varchar(50) = '%',
	@Authors Varchar(30) = '%',
	@Publisher Varchar(15) = '%',
	@Year Int

)
as
	declare @id int;
	set @id = ((select max(Id)
				from Books)+1);
	insert into Books(Id, Name, Authors, Publisher, PYear, BState) values (isnull(@id,1),@Name, @Authors, @Publisher, @Year, 'Dostępna');
go

Create Procedure Add_eBook
(
	@Name Varchar(50) = '%',
	@Authors Varchar(30) = '%',
	@Publisher Varchar(15) = '%',
	@Year Int

)
as
	declare @id int;
	set @id = ((select max(Id)
				from eBooks)+1);
	insert into eBooks(Id, Name, Authors, Publisher, PYear, BState) values (isnull(@id,1),@Name, @Authors, @Publisher, @Year, 'Dostępna');
go


Create Procedure Borrowed
(
	@userid Int
)
as
	select *
	from BorrowedBooks
	where User = @userid
go

Create Procedure Borrow_Book
(
	@id Int,
	@Userid Int
)
as
	ALTER TABLE Books 
	NOCHECK CONSTRAINT FK_Books;
	update Books
	set BState='Nie dostępna'
	where Id=@id;
	insert into BorrowedBooks
	SELECT B.Id, B.Name, B.Authors, B.Publisher, B.PYear,U.Id
	FROM Books B, Users U
	where B.Id=@id and U.Id=@Userid
	ALTER TABLE Books 
	CHECK CONSTRAINT FK_Books;
go


Create view AvailableB as
Select B.Id, B.Name, B.Authors, B.Publisher, B.PYear
from Books B
where B.BState='Dostępna'

Create view AvailableE as
Select B.Id, B.Name, B.Authors, B.Publisher, B.PYear
from eBooks B
where B.BState='Dostępna'

ALTER TABLE Books 
NOCHECK CONSTRAINT FK_Books;
update Books
set BState='Nie dostępna'
where Id=1
ALTER TABLE Books 
CHECK CONSTRAINT FK_Books;

ALTER TABLE Books 
NOCHECK CONSTRAINT FK_Books;
Delete 
FROM Books
WHERE Id=1
ALTER TABLE Books 
CHECK CONSTRAINT FK_Books;

ALTER TABLE Books 
NOCHECK CONSTRAINT FK_Books;
Insert into Books Values (1, 'Wiedźmin 1','Andrzej Sapkowski','Nowa Era',1999,'Dostępna')
ALTER TABLE Books 
CHECK CONSTRAINT FK_Books;

Select * from Books
Select * from eBooks
Select * from AvailableB
Select * from AvailableE
Select * from BorrowedBooks
Select * from Archive
